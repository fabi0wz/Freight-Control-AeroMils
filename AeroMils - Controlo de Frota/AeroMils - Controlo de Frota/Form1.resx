<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel_icone.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>